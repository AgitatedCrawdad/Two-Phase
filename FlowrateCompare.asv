P = 29; %Pressure [PSI]
T = 60; %Temperature [C]
m_dot = 0.003979974020503; %Mass Flow Rate [kg/s] 
flow_area = 5.067E-4; %Flow area [m^2]
flow_diam = 0.0254; %[m]
length = 1.5; %[m]
heater_length = 0.6; %[m]
heater_power = 1.0083; %[kW]
g = 9.81; %Acceleration due to gravity [m/s^2]

mass_flux = m_dot/flow_area; %[kg/m^2*s]
Tsat = IAPWS_IF97('Tsat_p',P*0.00689476)-273.15; %Pressure to be given in MPa
rho_liq =  1./IAPWS_IF97('v_pT',P*0.00689476,T+273); %Find liquid density using Pressure and Temperature [MPA] [K]
rho_vap =  1./IAPWS_IF97('v_pT',P*0.00689476,Tsat+273.16); %Find vapor density using Pressure and Temperature [MPA] [K]
rho_liq_sat =  1./IAPWS_IF97('v_pT',P*0.00689476,Tsat+273); %Find liquid density using Pressure and Temperature [MPA] [K]


h_fsat = IAPWS_IF97('h_pT',P*0.00689476,Tsat+273.15); %Saturated Liquid Enthalpy
h_vsat = IAPWS_IF97('h_pT',P*0.00689476,Tsat+273.16); %Saturated Vapor Enthalpy
h_in = IAPWS_IF97('h_pT',P*0.00689476,T+273.15); %Inlet Liquid Enthalpy
hfg = h_vsat-h_fsat; %Latent Heat of Vaporization

% h_gain = heater_power/m_dot;
% quality = ((heater_power./m_dot)+(h_in-h_fsat)')./(hfg');
% if quality < 0
%     quality = 0;
% end

K = 50;
cp = 4.186; %kJ/kgK
quality = @(m_dot,q_dot) ((m_dot*cp*(Tsat-T)-q_dot)/(-hfg*m_dot));
left = @(m_dot,q_dot) (2*rho_liq-((rho_vap+rho_liq_sat)/(1+(rho_vap/rho_liq_sat))))*g*L;
% right = @(m_dot,q_dot) (1+(q_dot./(m_dot*hfg))*((rho_l/rho_g)-1))*((K*(m_dot.^2))/(2*rho_l*(area^2)));

% % f = @(m_dot,K) ((((rho_l-rho_g)/(1+((1-(q_dot/(m_dot*hfg)))/(q_dot/(m_dot*hfg))*(rho_g/rho_l))))*g*L)-...
% %     (1+(q_dot/(m_dot*hfg))*((rho_l/rho_g)-1))*((K*(m_dot^2))/(2*rho_l*(area^2))))^2;
% % error = @(x) abs(right(x(1),x(2))-left(x(1)))^2;
% n=9;
% values = zeros(n,2);
% for i=1:n
% % error = @(x) sum((right(x(1),q_dot(i))+right2(x(1))-left(x(1),q_dot(i)))).^2+sum((m(i)-x(1))).^2;
% error = @(x) sum((right(x(1),q_dot(i))-left(x(1),q_dot(i)))).^2;
% 
% % fun = @(x) f(x(1),x(2));
% % x0 = [1, 3];
% x0 = 0.1*ones(n,1);
% % x0(:,2) = 2;
% % x0 = 0.1;
% A = [];
% b = [];
% Aeq =[];
% beq = [];
% lb = [0];
% ub = [20];
% % lb = zeros(n,1);
% % ub = 10*ones(n,1);
% % options = optimoptions('fmincon','Algorithm','interior-point','Display','iter');
% % options.Display = 'iter';
% % [x, fval, exitflag, output] = fmincon(fun,x0,A,b,Aeq,beq,lb,ub);
% [x, fval, exitflag, output] = fmincon(error,x0(i),A,b,Aeq,beq,lb,ub);
% values(i,:) = x;
% end
% fval
% plot(q_dot,values(:,1))
% hold on 
% plot(P,m,'o')
% % [x,resnorm,~,exitflag,output] = lsqcurvefit(fun,x0,P,m);
% % hold on
% % plot(t,F(x,t))
% % hold off